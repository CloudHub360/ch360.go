// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ProgressHandler is an autogenerated mock type for the ProgressHandler type
type ProgressHandler struct {
	mock.Mock
}

// Notify provides a mock function with given fields: filename, result
func (_m *ProgressHandler) Notify(filename string, result interface{}) error {
	ret := _m.Called(filename, result)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(filename, result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NotifyErr provides a mock function with given fields: filename, err
func (_m *ProgressHandler) NotifyErr(filename string, err error) error {
	ret := _m.Called(filename, err)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, error) error); ok {
		r0 = rf(filename, err)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NotifyFinish provides a mock function with given fields:
func (_m *ProgressHandler) NotifyFinish() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NotifyStart provides a mock function with given fields: totalJobs
func (_m *ProgressHandler) NotifyStart(totalJobs int) error {
	ret := _m.Called(totalJobs)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(totalJobs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
